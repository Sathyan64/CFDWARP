c3 = 1 - c2 - c1
Prho1 = ((u*u + v*v + w*w)/2 + tmp1)*PrhoE
Prho2 = ((u*u + v*v + w*w)/2 + tmp2)*PrhoE
Prho3 = ((u*u + v*v + w*w)/2 + tmp3)*PrhoE

Prho = c1*Prho1 + c2*Prho2 + c3*Prho3
Prhou = -u*PrhoE
Prhov = -v*PrhoE
Prhow = -w*PrhoE
V = X1*u + X2*v + X3*w
H = u*u + v*v + w*w + k + cN2*ev + (a*a - Prho - k*2/3)/PrhoE

Xmag = Sqrt[X1*X1 + X2*X2 + X3*X3]
a2 = a*a

Xhat1 = X1/Xmag
Xhat2 = X2/Xmag
Xhat3 = X3/Xmag

A = {
  {V - V*c1, -V*c1, -V*c1, X1*c1, X2*c1, X3*c1, 0, 0, 0, 0}, 
  {-V*c2, V - V*c2, -V*c2, X1*c2, X2*c2, X3*c2, 0, 0, 0, 0}, 
  {-V*c3, -V*c3, V - V*c3, X1*c3, X2*c3, X3*c3, 0, 0, 0, 0}, 
  {X1*Prho1 - u*V, X1*Prho2 - u*V, X1*Prho3 - u*V, 
   V + X1*Prhou + X1*u, X1*Prhov + X2*u, X1*Prhow + X3*u, 
   X1*PrhoE, -X1*(PrhoE - 2/3), 0, -X1*PrhoE}, 
  {X2*Prho1 - v*V, 
   X2*Prho2 - v*V, X2*Prho3 - v*V, X2*Prhou + X1*v, 
   V + X2*Prhov + X2*v, X2*Prhow + X3*v, X2*PrhoE, -X2*(PrhoE - 2/3), 
   0, -X2*PrhoE}, 
  {X3*Prho1 - w*V, X3*Prho2 - w*V, X3*Prho3 - w*V, 
   X3*Prhou + X1*w, X3*Prhov + X2*w, V + X3*Prhow + X3*w, 
   X3*PrhoE, -X3*(PrhoE - 2/3), 0, -X3*PrhoE}, 
  {V*Prho1 - H*V, 
   V*Prho2 - H*V, V*Prho3 - H*V, V*Prhou + X1*H, V*Prhov + X2*H, 
   V*Prhow + X3*H, V + V*PrhoE, -V*(PrhoE - 2/3), 0, -V*PrhoE},
  {-V*k, -V*k, -V*k, X1*k, X2*k, X3*k, 0, V, 0, 0}, 
  {-V*psi, -V*psi, -V*psi, X1*psi, X2*psi, X3*psi, 0, 0, V, 0}, 
  {-V*cN2*ev, -V*cN2*ev, -V*cN2*ev, X1*cN2*ev, X2*cN2*ev, 
   X3*cN2*ev, 0, 0, 0, V}}

Lambda = DiagonalMatrix[{V, V, V, V, V, V + a*Xmag, V - a*Xmag, V, V, 
   V}]

denom = Sqrt[(Xhat2 - Xhat1)^2 + (Xhat3 - Xhat2)^2 + (Xhat1 - Xhat3)^2]
l11 = (Xhat3 - Xhat2)/denom
l21 = (Xhat1 - Xhat3)/denom
l31 = (Xhat2 - Xhat1)/denom
l12 = (Xhat2*l31 - Xhat3*l21)
l22 = (Xhat3*l11 - Xhat1*l31)
l32 = (Xhat1*l21 - Xhat2*l11)




Linv = {
{1, 0, 0, c1, c1, c1, c1, 0, 0, 0}, 
{0, 1, 0, c2, c2, c2, c2, 0, 0, 0}, 
{0, 0, 1, c3, c3, c3, c3, 0, 0, 0}, 
{u + a*(Xhat2 + Xhat3), u + a*(Xhat2 + Xhat3), 
   u + a*(Xhat2 + Xhat3), u - a*Xhat2, u - a*Xhat3, u + a*Xhat1, 
   u - a*Xhat1, 0, 0, 0}, {v - a*Xhat1, v - a*Xhat1, v - a*Xhat1, 
   v + a*(Xhat1 + Xhat3), v - a*Xhat3, v + a*Xhat2, v - a*Xhat2, 0, 0,
    0}, 
{w - a*Xhat1, w - a*Xhat1, w - a*Xhat1, w - a*Xhat2, 
   w + a*(Xhat1 + Xhat2), w + a*Xhat3, w - a*Xhat3, 0, 0, 
   0}, 
{u*u + v*v + w*w - Prho1/PrhoE + a*u*(Xhat2 + Xhat3) - a*(v + w)*Xhat1, 
   u*u + v*v + w*w - Prho2/PrhoE + a*u*(Xhat2 + Xhat3) - a*(v + w)*Xhat1, 
   u*u + v*v + w*w - Prho3/PrhoE + a*u*(Xhat2 + Xhat3) - a*(v + w)*Xhat1, 
   H - a2/PrhoE + a*v*(Xhat1 + Xhat3) - a*(u + w)*Xhat2, 
   H - a2/PrhoE + a*w*(Xhat1 + Xhat2) - a*(u + v)*Xhat3, 
   H + a*(u*Xhat1 + v*Xhat2 + w*Xhat3), 
   H - a*(u*Xhat1 + v*Xhat2 + w*Xhat3), a2 - 2*a2/(3*PrhoE), 0, 
   cN2*a2},
{0, 0, 0, k, k, k, k, a2, 0, 0}, 
{0, 0, 0, psi, psi, psi, psi, 0, a2, 0}, 
{0, 0, 0, cN2*ev, cN2*ev, cN2*ev, cN2*ev, 0, 0, cN2*a2}}






Xtmp1 = (X1*X1 + X2*(X2 - X3) + 2*X1*X3)/(Xmag*(X1 + X2 + X3))

Xtmp2 = (X1*X1 + 2*X1*X2 + X3*(-X2 + X3))/(Xmag*(X1 + X2 + X3))

Xtmp3 = (X1*(X2 + X3) + 2*(X2*X2 + X3*X3))/(Xmag*(X1 + X2 + X3))

qtmp1 = (-w*Xtmp1 - v*Xtmp2 + u*Xtmp3)



Xtmp4 = (X1*X1 + X2*X2 - X1*X3 + 2*X2*X3)/((X1 + X2 + X3)*Xmag)

Xtmp5 = (2*X1*X2 + X2*X2 - X1*X3 + X3*X3)/((X1 + X2 + X3)*Xmag)

Xtmp6 = (2*X1*X1 + X1*X2 + X3*(X2 + 2*X3))/((X1 + X2 + X3)*Xmag)

qtmp2 = (w*Xtmp4 + u*Xtmp5 - v*Xtmp6)



Xtmp7 = (-X1*X2 + X2*X2 + 2*X1*X3 + X3*X3)/((X1 + X2 + X3)*Xmag)

Xtmp8 = (2*X1*X1 + X1*X3 + X2*(2*X2 + X3))/((X1 + X2 + X3)*Xmag)

Xtmp9 = (X1*X1 - X1*X2 + X3*(2*X2 + X3))/((X1 + X2 + X3)*Xmag)

qtmp3 = (u*Xtmp7 - w*Xtmp8 + v*Xtmp9)




L = {{-c1*(a*qtmp1 + 2*a2 + Prho1) + 
     3*a2, -c1*(a*qtmp1 + 2*a2 + Prho2), -c1*(a*qtmp1 + 2*a2 + 
       Prho3), +c1*(PrhoE*u + a*Xtmp3), +c1*(PrhoE*v - 
       a*Xtmp2), +c1*(PrhoE*w - a*Xtmp1), -c1*PrhoE, c1*(PrhoE - 2/3),
     0, (c1*PrhoE)}/(3*
     a2), {-c2*(a*qtmp1 + 2*a2 + 
       Prho1), -c2*(a*qtmp1 + 2*a2 + Prho2) + 
     3*a2, -c2*(a*qtmp1 + 2*a2 + Prho3), +c2*(PrhoE*u + 
       a*Xtmp3), +c2*(PrhoE*v - a*Xtmp2), +c2*(PrhoE*w - 
       a*Xtmp1), -c2*PrhoE, c2*(PrhoE - 2/3), 
    0, (c2*PrhoE)}/(3*
     a2), {-c3*(a*qtmp1 + 2*a2 + Prho1), -c3*(a*qtmp1 + 2*a2 + 
       Prho2), -c3*(a*qtmp1 + 2*a2 + Prho3) + 
     3*a2, +c3*(PrhoE*u + a*Xtmp3), +c3*(PrhoE*v - 
       a*Xtmp2), +c3*(PrhoE*w - a*Xtmp1), -c3*PrhoE, c3*(PrhoE - 2/3),
     0, (c3*PrhoE)}/(3*a2), {a2 - Prho1 + a*qtmp2, 
    a2 - Prho2 + a*qtmp2, a2 - Prho3 + a*qtmp2, PrhoE*u - a*Xtmp5, 
    PrhoE*v + a*Xtmp6, PrhoE*w - a*Xtmp4, -PrhoE, PrhoE - 2/3, 0, 
    PrhoE}/(3*a2), {a2 - Prho1 + a*qtmp3, a2 - Prho2 + a*qtmp3, 
    a2 - Prho3 + a*qtmp3, PrhoE*u - a*Xtmp7, PrhoE*v - a*Xtmp9, 
    PrhoE*w + a*Xtmp8, -PrhoE, PrhoE - 2/3, 0, 
    PrhoE}/(3*a2), {-a*V/Xmag + Prho1, -a*V/Xmag + Prho2, -a*V/Xmag + 
     Prho3, -PrhoE*u + a*Xhat1, -PrhoE*v + a*Xhat2, -PrhoE*w + 
     a*Xhat3, PrhoE, 2/3 - PrhoE, 
    0, -PrhoE}/(2*a2), {a*V/Xmag + Prho1, a*V/Xmag + Prho2, 
    a*V/Xmag + Prho3, -PrhoE*u - a*Xhat1, -PrhoE*v - 
     a*Xhat2, -PrhoE*w - a*Xhat3, PrhoE, 2/3 - PrhoE, 
    0, -PrhoE}/(2*
     a2), {-k*(2*a2 + Prho1 + a*qtmp1), -k*(2*a2 + Prho2 + 
       a*qtmp1), -k*(2*a2 + Prho3 + a*qtmp1), k*(PrhoE*u + a*Xtmp3), 
    k*(PrhoE*v - a*Xtmp2), k*(PrhoE*w - a*Xtmp1), -k*PrhoE, 
    3*a2 - (2/3)*k + k*PrhoE, 0, 
    k*PrhoE}/(3*a2*
     a2), {-psi*(2*a2 + Prho1 + a*qtmp1), -psi*(2*a2 + Prho2 + 
       a*qtmp1), -psi*(2*a2 + Prho3 + a*qtmp1), 
    psi*(PrhoE*u + a*Xtmp3), psi*(PrhoE*v - a*Xtmp2), 
    psi*(PrhoE*w - a*Xtmp1), -PrhoE*psi, (-2/3 + PrhoE)*psi, 3*a2, 
    PrhoE*psi}/(3*a2*
     a2), {-ev*(2*a2 + Prho1 + a*qtmp1), -ev*(2*a2 + Prho2 + 
       a*qtmp1), -ev*(2*a2 + Prho3 + a*qtmp1), ev*(PrhoE*u + a*Xtmp3),
     ev*(PrhoE*v - a*Xtmp2), 
    ev*(PrhoE*w - a*Xtmp1), -PrhoE*ev, (-2/3 + PrhoE)*ev, 
    0, (3*a2 + cN2*PrhoE*ev)/cN2}/(3*a2*a2)}


Pstar = P + (2/3)*rho*k

U = {c1*rho, c2*rho, c3*rho, rho*u, rho*v, rho*w, rho*H - Pstar, 
  rho*k, rho*psi, rho*cN2*ev}

alpha = {c1*Pstar*PrhoE/(3*a2), c2*Pstar*PrhoE/(3*a2), 
  c3*Pstar*PrhoE/(3*a2), Pstar*PrhoE/(3*a2), 
  Pstar*PrhoE/(3*a2), (rho - (Pstar*PrhoE)/a2)/
   2, (rho - (Pstar*PrhoE)/a2)/2, k*Pstar*PrhoE/(3*a2*a2), 
  Pstar*PrhoE*psi/(3*a2*a2), ev*Pstar*PrhoE/(3*a2*a2)}


F = Simplify[A.U]
ALinv = Simplify[A.Linv]
LinvLambda = Simplify[Linv.Lambda]


Zero = Simplify[ALinv - LinvLambda]
alpha2 = Simplify[L.U]

Iden = Simplify[Linv.L]
Zero = Simplify[alpha - alpha2]
